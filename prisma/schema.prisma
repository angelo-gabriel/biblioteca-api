// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Author {
  id    String @id @default(uuid())
  name  String @unique
  books Book[] @relation("AuthorBooks")
}

model Book {
  id        String     @id @default(uuid())
  title     String
  exemplars Exemplar[]
  authorId  String
  author    Author     @relation("AuthorBooks", fields: [authorId], references: [id], onDelete: Cascade)
}

model Exemplar {
  id        String  @id @default(uuid())
  bookId    String
  book      Book    @relation(fields: [bookId], references: [id], onDelete: Cascade)
  available Boolean @default(true)
  loans     Loan[]
}

model User {
  id    String @id @default(uuid())
  name  String
  email String @unique
  loans Loan[]
}

model Loan {
  id         String    @id @default(uuid())
  exemplarId String
  exemplar   Exemplar  @relation(fields: [exemplarId], references: [id], onDelete: Cascade)
  userId     String
  user       User      @relation(fields: [userId], references: [id])
  loanedAt   DateTime  @default(now())
  returnedAt DateTime?
}
